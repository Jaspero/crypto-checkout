{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal.mjs","../../node_modules/@jaspero/crypto-checkout/services/coincap.service.js","../../node_modules/@jaspero/crypto-checkout/types/crypto.service.js","../../node_modules/lit-html/lib/dom.js","../../node_modules/lit-html/lib/template.js","../../node_modules/lit-html/lib/modify-template.js","../../node_modules/lit-html/lib/directive.js","../../node_modules/lit-html/lib/part.js","../../node_modules/lit-html/lib/template-instance.js","../../node_modules/lit-html/lib/template-result.js","../../node_modules/lit-html/lib/parts.js","../../node_modules/lit-html/lib/template-factory.js","../../node_modules/lit-html/lib/render.js","../../node_modules/lit-html/lib/default-template-processor.js","../../node_modules/lit-html/lit-html.js","../../node_modules/lit-html/lib/shady-render.js","../../node_modules/lit-element/lib/updating-element.js","../../node_modules/lit-element/lib/decorators.js","../../node_modules/lit-element/lib/css-tag.js","../../node_modules/lit-element/lit-element.js","../../node_modules/lit-html/directives/unsafe-html.js","../../node_modules/@jaspero/crypto-checkout/elements/crypto-checkout.js","../../node_modules/@jaspero/crypto-checkout/elements/crypto-timer.js","../../node_modules/@jaspero/crypto-checkout/types/coin.class.js","../../node_modules/@jaspero/crypto-checkout/coins/btc.js","../../node_modules/@jaspero/crypto-checkout/coins/eth.js","../../node_modules/@jaspero/crypto-checkout/coins/bch.js","../../node_modules/@jaspero/crypto-checkout/coins/bsv.js","../../node_modules/@jaspero/crypto-checkout/coins/ltc.js","../../node_modules/@jaspero/crypto-checkout/coins/xmr.js","../../src/App.svelte","../../node_modules/@jaspero/crypto-checkout/core.js","../../src/main.js"],"sourcesContent":["function noop() {}\n\nconst identity = x => x;\n\nfunction assign(tar, src) {\n\tfor (const k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction is_promise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction blank_object() {\n\treturn Object.create(null);\n}\n\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\nfunction is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction validate_store(store, name) {\n\tif (!store || typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nfunction subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(store.subscribe(callback));\n}\n\nfunction create_slot(definition, ctx, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n\t\t: ctx.$$scope.ctx;\n}\n\nfunction get_slot_changes(definition, ctx, changed, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n\t\t: ctx.$$scope.changed || {};\n}\n\nfunction exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\nconst tasks = new Set();\nlet running = false;\n\nfunction run_tasks() {\n\ttasks.forEach(task => {\n\t\tif (!task[0](window.performance.now())) {\n\t\t\ttasks.delete(task);\n\t\t\ttask[1]();\n\t\t}\n\t});\n\n\trunning = tasks.size > 0;\n\tif (running) requestAnimationFrame(run_tasks);\n}\n\nfunction clear_loops() {\n\t// for testing...\n\ttasks.forEach(task => tasks.delete(task));\n\trunning = false;\n}\n\nfunction loop(fn) {\n\tlet task;\n\n\tif (!running) {\n\t\trunning = true;\n\t\trequestAnimationFrame(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise(fulfil => {\n\t\t\ttasks.add(task = [fn, fulfil]);\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor);\n}\n\nfunction detach(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detach_between(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detach_before(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detach_after(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\nfunction element(name) {\n\treturn document.createElement(name);\n}\n\nfunction svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction text(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction space() {\n\treturn text(' ');\n}\n\nfunction empty() {\n\treturn text('');\n}\n\nfunction listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\nfunction prevent_default(fn) {\n\treturn function(event) {\n\t\tevent.preventDefault();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction stop_propagation(fn) {\n\treturn function(event) {\n\t\tevent.stopPropagation();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse node.setAttribute(attribute, value);\n}\n\nfunction set_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\nfunction xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction get_binding_group_value(group) {\n\tconst value = [];\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction to_number(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children(element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claim_element(nodes, name, attributes, svg) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (let j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? svg_element(name) : element(name);\n}\n\nfunction claim_text(nodes, data) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn text(data);\n}\n\nfunction set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data !== data) text.data = data;\n}\n\nfunction set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\nfunction set_style(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction select_option(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction select_value(select) {\n\tconst selected_option = select.querySelector(':checked') || select.options[0];\n\treturn selected_option && selected_option.__value;\n}\n\nfunction select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n\nfunction add_resize_listener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggle_class(element, name, toggle) {\n\telement.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction custom_event(type, detail) {\n\tconst e = document.createEvent('CustomEvent');\n\te.initCustomEvent(type, false, false, detail);\n\treturn e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\n\tif (!current_rules[name]) {\n\t\tif (!stylesheet) {\n\t\t\tconst style = element('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\tstylesheet = style.sheet;\n\t\t}\n\n\t\tcurrent_rules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n\n\tactive += 1;\n\treturn name;\n}\n\nfunction delete_rule(node, name) {\n\tnode.style.animation = (node.style.animation || '')\n\t\t.split(', ')\n\t\t.filter(name\n\t\t\t? anim => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t\t)\n\t\t.join(', ');\n\n\tif (name && !--active) clear_rules();\n}\n\nfunction clear_rules() {\n\trequestAnimationFrame(() => {\n\t\tif (active) return;\n\t\tlet i = stylesheet.cssRules.length;\n\t\twhile (i--) stylesheet.deleteRule(i);\n\t\tcurrent_rules = {};\n\t});\n}\n\nfunction create_animation(node, from, fn, params) {\n\tif (!from) return noop;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return noop;\n\n\tconst {\n\t\tdelay = 0,\n\t\tduration = 300,\n\t\teasing = identity,\n\t\tstart: start_time = window.performance.now() + delay,\n\t\tend = start_time + duration,\n\t\ttick = noop,\n\t\tcss\n\t} = fn(node, { from, to }, params);\n\n\tlet running = true;\n\tlet started = false;\n\tlet name;\n\n\tconst css_text = node.style.cssText;\n\n\tfunction start() {\n\t\tif (css) {\n\t\t\tif (delay) node.style.cssText = css_text; // TODO create delayed animation instead?\n\t\t\tname = create_rule(node, 0, 1, duration, 0, easing, css);\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\tfunction stop() {\n\t\tif (css) delete_rule(node, name);\n\t\trunning = false;\n\t}\n\n\tloop(now => {\n\t\tif (!started && now >= start_time) {\n\t\t\tstart();\n\t\t}\n\n\t\tif (started && now >= end) {\n\t\t\ttick(1, 0);\n\t\t\tstop();\n\t\t}\n\n\t\tif (!running) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (started) {\n\t\t\tconst p = now - start_time;\n\t\t\tconst t = 0 + 1 * easing(p / duration);\n\t\t\ttick(t, 1 - t);\n\t\t}\n\n\t\treturn true;\n\t});\n\n\tif (delay) {\n\t\tif (css) node.style.cssText += css(0, 1);\n\t} else {\n\t\tstart();\n\t}\n\n\ttick(0, 1);\n\n\treturn stop;\n}\n\nfunction fix_position(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nlet current_component;\n\nfunction set_current_component(component) {\n\tcurrent_component = component;\n}\n\nfunction get_current_component() {\n\tif (!current_component) throw new Error(`Function called outside component initialization`);\n\treturn current_component;\n}\n\nfunction beforeUpdate(fn) {\n\tget_current_component().$$.before_render.push(fn);\n}\n\nfunction onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\nfunction afterUpdate(fn) {\n\tget_current_component().$$.after_render.push(fn);\n}\n\nfunction onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\nfunction createEventDispatcher() {\n\tconst component = current_component;\n\n\treturn (type, detail) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(type, detail);\n\t\t\tcallbacks.slice().forEach(fn => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n}\n\nfunction getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\n\tif (callbacks) {\n\t\tcallbacks.slice().forEach(fn => fn(event));\n\t}\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\n\nlet update_promise;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\n\nfunction schedule_update() {\n\tif (!update_promise) {\n\t\tupdate_promise = Promise.resolve();\n\t\tupdate_promise.then(flush);\n\t}\n}\n\nfunction tick() {\n\tschedule_update();\n\treturn update_promise;\n}\n\nfunction add_binding_callback(fn) {\n\tbinding_callbacks.push(fn);\n}\n\nfunction add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\nfunction add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\nfunction flush() {\n\tconst seen_callbacks = new Set();\n\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\twhile (dirty_components.length) {\n\t\t\tconst component = dirty_components.shift();\n\t\t\tset_current_component(component);\n\t\t\tupdate(component.$$);\n\t\t}\n\n\t\twhile (binding_callbacks.length) binding_callbacks.shift()();\n\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\twhile (render_callbacks.length) {\n\t\t\tconst callback = render_callbacks.pop();\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\tcallback();\n\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t}\n\t\t}\n\t} while (dirty_components.length);\n\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\n\tupdate_promise = null;\n}\n\nfunction update($$) {\n\tif ($$.fragment) {\n\t\t$$.update($$.dirty);\n\t\trun_all($$.before_render);\n\t\t$$.fragment.p($$.dirty, $$.ctx);\n\t\t$$.dirty = null;\n\n\t\t$$.after_render.forEach(add_render_callback);\n\t}\n}\n\nlet promise;\n\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\n\treturn promise;\n}\n\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nlet outros;\n\nfunction group_outros() {\n\toutros = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nfunction check_outros() {\n\tif (!outros.remaining) {\n\t\trun_all(outros.callbacks);\n\t}\n}\n\nfunction on_outro(callback) {\n\toutros.callbacks.push(callback);\n}\n\nfunction create_in_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick$$1(0, 1);\n\n\t\tconst start_time = window.performance.now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tif (task) task.abort();\n\t\trunning = true;\n\n\t\ttask = loop(now => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick$$1(1, 0);\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn running = false;\n\t\t\t\t}\n\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tlet started = false;\n\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\n\t\t\tdelete_rule(node);\n\n\t\t\tif (typeof config === 'function') {\n\t\t\t\tconfig = config();\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_out_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = true;\n\tlet animation_name;\n\n\tconst group = outros;\n\n\tgroup.remaining += 1;\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = window.performance.now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tloop(now => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick$$1(0, 1);\n\n\t\t\t\t\tif (!--group.remaining) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.callbacks);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick$$1(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (typeof config === 'function') {\n\t\twait().then(() => {\n\t\t\tconfig = config();\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_bidirectional_transition(node, fn, params, intro) {\n\tlet config = fn(node, params);\n\n\tlet t = intro ? 0 : 1;\n\n\tlet running_program = null;\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction init(program, duration) {\n\t\tconst d = program.b - t;\n\t\tduration *= Math.abs(d);\n\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tconst program = {\n\t\t\tstart: window.performance.now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\tprogram.group = outros;\n\t\t\toutros.remaining += 1;\n\t\t}\n\n\t\tif (running_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\n\t\t\tif (b) tick$$1(0, 1);\n\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\n\t\t\tloop(now => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick$$1(t = running_program.b, 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.remaining) run_all(running_program.group.callbacks);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\trun(b) {\n\t\t\tif (typeof config === 'function') {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconfig = config();\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\nfunction handle_promise(promise, info) {\n\tconst token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ton_outro(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tblock.o(1);\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tif (block.i) block.i(1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\n\t\t\tflush();\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (is_promise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\nfunction outro_and_destroy_block(block, lookup) {\n\ton_outro(() => {\n\t\tdestroy_block(block, lookup);\n\t});\n\n\tblock.o(1);\n}\n\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_lookup.set(key, new_blocks[i] = block);\n\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\n\tfunction insert(block) {\n\t\tif (block.i) block.i(1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move.has(old_key)) {\n\t\t\to--;\n\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction get_spread_update(levels, updates) {\n\tconst update = {};\n\n\tconst to_null_out = {};\n\tconst accounted_for = {};\n\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalid_attribute_name_character.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(items[i], i);\n\t}\n\treturn str;\n}\n\nconst missing_component = {\n\t$$render: () => ''\n};\n\nfunction validate_component(component, name) {\n\tif (!component || !component.$$render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n\tconsole.log(values); // eslint-disable-line no-console\n\treturn '';\n}\n\nlet on_destroy;\n\nfunction create_ssr_component(fn) {\n\tfunction $$render(result, props, bindings, slots) {\n\t\tconst parent_component = current_component;\n\n\t\tconst $$ = {\n\t\t\ton_destroy,\n\t\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t\t// these will be immediately discarded\n\t\t\ton_mount: [],\n\t\t\tbefore_render: [],\n\t\t\tafter_render: [],\n\t\t\tcallbacks: blank_object()\n\t\t};\n\n\t\tset_current_component({ $$ });\n\n\t\tconst html = fn(result, props, bindings, slots);\n\n\t\tset_current_component(parent_component);\n\t\treturn html;\n\t}\n\n\treturn {\n\t\trender: (props = {}, options = {}) => {\n\t\t\ton_destroy = [];\n\n\t\t\tconst result = { head: '', css: new Set() };\n\t\t\tconst html = $$render(result, props, {}, options);\n\n\t\t\trun_all(on_destroy);\n\n\t\t\treturn {\n\t\t\t\thtml,\n\t\t\t\tcss: {\n\t\t\t\t\tcode: Array.from(result.css).map(css => css.code).join('\\n'),\n\t\t\t\t\tmap: null // TODO\n\t\t\t\t},\n\t\t\t\thead: result.head\n\t\t\t};\n\t\t},\n\n\t\t$$render\n\t};\n}\n\nfunction get_store_value(store) {\n\tlet value;\n\tstore.subscribe(_ => value = _)();\n\treturn value;\n}\n\nfunction bind(component, name, callback) {\n\tif (component.$$.props.indexOf(name) === -1) return;\n\tcomponent.$$.bound[name] = callback;\n\tcallback(component.$$.ctx[name]);\n}\n\nfunction mount_component(component, target, anchor) {\n\tconst { fragment, on_mount, on_destroy, after_render } = component.$$;\n\n\tfragment.m(target, anchor);\n\n\t// onMount happens after the initial afterUpdate. Because\n\t// afterUpdate callbacks happen in reverse order (inner first)\n\t// we schedule onMount callbacks before afterUpdate callbacks\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = on_mount.map(run).filter(is_function);\n\t\tif (on_destroy) {\n\t\t\ton_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\n\tafter_render.forEach(add_render_callback);\n}\n\nfunction destroy(component, detaching) {\n\tif (component.$$) {\n\t\trun_all(component.$$.on_destroy);\n\t\tcomponent.$$.fragment.d(detaching);\n\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\tcomponent.$$.on_destroy = component.$$.fragment = null;\n\t\tcomponent.$$.ctx = {};\n\t}\n}\n\nfunction make_dirty(component, key) {\n\tif (!component.$$.dirty) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty = {};\n\t}\n\tcomponent.$$.dirty[key] = true;\n}\n\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\n\tconst props = options.props || {};\n\n\tconst $$ = component.$$ = {\n\t\tfragment: null,\n\t\tctx: null,\n\n\t\t// state\n\t\tprops: prop_names,\n\t\tupdate: noop,\n\t\tnot_equal: not_equal$$1,\n\t\tbound: blank_object(),\n\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\tbefore_render: [],\n\t\tafter_render: [],\n\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty: null\n\t};\n\n\tlet ready = false;\n\n\t$$.ctx = instance\n\t\t? instance(component, props, (key, value) => {\n\t\t\tif ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n\t\t\t\tif ($$.bound[key]) $$.bound[key](value);\n\t\t\t\tif (ready) make_dirty(component, key);\n\t\t\t}\n\t\t})\n\t\t: props;\n\n\t$$.update();\n\tready = true;\n\trun_all($$.before_render);\n\t$$.fragment = create_fragment($$.ctx);\n\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\t$$.fragment.l(children(options.target));\n\t\t} else {\n\t\t\t$$.fragment.c();\n\t\t}\n\n\t\tif (options.intro && component.$$.fragment.i) component.$$.fragment.i();\n\t\tmount_component(component, options.target, options.anchor);\n\t\tflush();\n\t}\n\n\tset_current_component(parent_component);\n}\n\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n\tSvelteElement = class extends HTMLElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t}\n\n\t\tconnectedCallback() {\n\t\t\tfor (const key in this.$$.slotted) {\n\t\t\t\tthis.appendChild(this.$$.slotted[key]);\n\t\t\t}\n\t\t}\n\n\t\tattributeChangedCallback(attr$$1, oldValue, newValue) {\n\t\t\tthis[attr$$1] = newValue;\n\t\t}\n\n\t\t$destroy() {\n\t\t\tdestroy(this, true);\n\t\t\tthis.$destroy = noop;\n\t\t}\n\n\t\t$on(type, callback) {\n\t\t\t// TODO should this delegate to addEventListener?\n\t\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\t\tcallbacks.push(callback);\n\n\t\t\treturn () => {\n\t\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t\t};\n\t\t}\n\n\t\t$set() {\n\t\t\t// overridden by instance, if it has props\n\t\t}\n\t};\n}\n\nclass SvelteComponent {\n\t$destroy() {\n\t\tdestroy(this, true);\n\t\tthis.$destroy = noop;\n\t}\n\n\t$on(type, callback) {\n\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\tcallbacks.push(callback);\n\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t$set() {\n\t\t// overridden by instance, if it has props\n\t}\n}\n\nclass SvelteComponentDev extends SvelteComponent {\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(`'target' is a required option`);\n\t\t}\n\n\t\tsuper();\n\t}\n\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn(`Component was already destroyed`); // eslint-disable-line no-console\n\t\t};\n\t}\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","import { CryptoService } from '../types/crypto.service';\nexport class CoincapService extends CryptoService {\n    constructor() {\n        super(...arguments);\n        this.url = 'https://api.coincap.io/v2/';\n    }\n    async getPrice(value, coin) {\n        let res = await fetch(this.url + 'assets/' + coin);\n        res = await res.json();\n        return value / res.data.priceUsd;\n    }\n    async confirmPayment(value, note) {\n        return { success: true, value, note };\n    }\n}\n//# sourceMappingURL=coincap.service.js.map","export class CryptoService {\n    // @ts-ignore\n    async getPrice(value, coin) {\n        return 0;\n    }\n    ;\n    async confirmPayment(value, note) {\n        return { success: true, value, note };\n    }\n}\n//# sourceMappingURL=crypto.service.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport 'qr-code-styling/lib/qr-code-styling.js';\nimport { css, customElement, html, LitElement, property, query } from 'lit-element';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nlet CryptoCheckout = class CryptoCheckout extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.waitForConfirmation = false;\n        this.target = false;\n        this.closeOnEscape = true;\n        this.lockCoin = false;\n        this.message = '';\n        this.hasTime = true;\n        this.loading = false;\n        this.paid = false;\n        this.onEsc = (e) => {\n            if (e.key === 'Escape') {\n                this.close();\n            }\n        };\n    }\n    get service() {\n        return window.jpCrypto.service;\n    }\n    get coins() {\n        return window.jpCrypto.coins;\n    }\n    connectedCallback() {\n        if (this.coin) {\n            this.selectCoin(this.coin)\n                .catch();\n        }\n        if (this.closeOnEscape) {\n            window.addEventListener('keyup', this.onEsc);\n        }\n        super.connectedCallback();\n    }\n    disconnectedCallback() {\n        window.removeEventListener('keyup', this.onEsc);\n        super.disconnectedCallback();\n    }\n    coinsTemp() {\n        const coinTemp = (c) => html `<button class=\"cc-coins-button\" data-id=\"${c.id}\" @click=\"${this.coinSelected}\">\n        ${unsafeHTML(c.icon)}\n        ${c.label}\n      </button>`;\n        return html `\n      <div class=\"cc-coins\">\n        <h1 class=\"cc-coins-title\">Currency</h1>\n        <p class=\"cc-coins-description\">Select one crypto currency</p>\n        ${this.coins.map(coin => coinTemp(coin))}\n      </div>\n    `;\n    }\n    payTemp() {\n        if (this.hasTime) {\n            if (this.error) {\n                return html `\n          <div class=\"error\">\n            <p>${this.error}</p>\n          </div>`;\n            }\n            return html `\n        <slot name=\"instructions\"></slot>\n        <crypto-timer time=\"15:00\" @finished=\"${this.timeOut}\"></crypto-timer>\n        <div id=\"jp-c-qr\"></div>\n        <div>\n          <div>${this.displayedCoinValue}</div>\n          <input readonly value=\"${this.coin.wallet}\" />\n          ${this.lockCoin ? html `<button @click=\"${() => this.selectCoin('')}\">Back</button>` : ''}\n          <button @click=\"${() => this.confirmPay()}\">Confirm Payment</button>\n        </div>      \n      `;\n        }\n        return html `\n      <div class=\"time-out\">\n        <p>Timeout elapsed for this order.</p>\n        <button @click=\"${() => this.selectCoin(this.coin.id)}\">Update Rate</button>\n        <button @click=\"${() => this.selectCoin('')}\">Select Different Coin</button>\n      </div>`;\n    }\n    paidTemp() {\n        return html `<slot name=\"paid\"></slot>`;\n    }\n    render() {\n        let view;\n        if (this.paid) {\n            view = this.paidTemp();\n        }\n        else if (this.coin) {\n            view = this.payTemp();\n        }\n        else {\n            view = this.coinsTemp();\n        }\n        if (this.target) {\n            return html `\n        ${this.loading && html `<div class=\"loading\"></div>` || ''}\n        ${view}\n      `;\n        }\n        return html `\n      <button class=\"cc-close\" @click=\"${this.close}\" aria-label=\"Close dialog\" title=\"Close dialog\">\n        <svg class=\"cc-close-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000\" stroke-width=\"2\"><path d=\"M16 8l-8 8m8 0L8 8\"/></svg>\n      </button>\n      <article class=\"cc\">\n        ${this.loading && html `<div class=\"loading\"></div>` || ''}\n        ${view}\n      </article>\n    `;\n    }\n    async coinSelected(event) {\n        const target = event.target;\n        await this.selectCoin(target.dataset.id);\n    }\n    async selectCoin(coin) {\n        this.coin = coin ? this.coins.find(it => it.id === coin) : null;\n        if (this.coin) {\n            this.coinValue = await this.coin.rate(this.value);\n            this.displayedCoinValue = this.coin.format(this.coinValue);\n            this.hasTime = true;\n            await this.updateComplete;\n            this.renderQr();\n        }\n    }\n    renderQr() {\n        const qrCode = new QRCodeStyling({\n            width: 300,\n            height: 300,\n            data: this.coin.qr(this.coinValue, this.message),\n            image: 'data:image/svg+xml;base64,' + window.btoa(this.coin.icon),\n            imageOptions: {\n                margin: 10\n            },\n            dotsOptions: {\n                color: this.coin.color,\n                type: 'rounded'\n            },\n            backgroundOptions: {\n                color: '#e9ebee',\n            }\n        });\n        qrCode.append(this._qrEl);\n    }\n    timeOut() {\n        this.hasTime = false;\n    }\n    close() {\n        this.parentNode.removeChild(this);\n    }\n    async confirmPay() {\n        if (this.waitForConfirmation) {\n            const { success, error } = await this.service.confirmPayment(this.coinValue, this.message);\n            if (!success) {\n                this.error = error;\n                return;\n            }\n        }\n        this.dispatchEvent(new CustomEvent('paid', {\n            detail: {\n                coin: this.coin.id,\n                amount: this.coinValue\n            }\n        }));\n        this.paid = true;\n    }\n};\nCryptoCheckout.styles = css `\n    :host {\n      --size-unit: min(4vw, 16px);\n\n      position: fixed;\n      z-index: 2147483647;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      display: flex;\n      overflow: auto;\n      background: rgba(0,0,0,.35);\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n      font-size: var(--size-unit);\n    }\n\n    .cc {\n      margin: auto;\n      background: white;\n      border-radius: 2em;\n      padding: 4em;\n      box-shadow: 0 0 .1em rgba(0,0,0,.2), 0 .5em 1em rgba(0,0,0,.1), 0 1em 2em rgba(0,0,0,.05);\n    }\n\n    .cc-close {\n      position: fixed;\n      top: .25em;\n      right: .25em;\n      padding: 0;\n      border: none;\n      font-size: inherit;\n      cursor: pointer;\n      background: white;\n      border-radius: 2em;\n    }\n\n    .cc-close:hover,\n    .cc-close:focus {\n      background: #eee;\n    }\n\n    .cc-close-icon {\n      width: 1.5em;\n      height: 1.5em;\n      display: block;\n    }\n    \n    .cc-coins {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .cc-coins-title {\n      font-size: 1.375em;\n      font-weight: bold;\n      margin: 0;\n    }\n\n    .cc-coins-description {\n      font-size: 1em;\n      margin: .25em 0 2em;\n      opacity: 0.6;\n    }\n    \n    .cc-coins-button {\n      font-size: inherit;\n      font-family: inherit;\n      display: flex;\n      align-items: center;\n      background: none;\n      border-top: .1em solid #ccc;\n      border-right: .1em solid #ccc;\n      border-bottom: none;\n      border-left: .1em solid #ccc;\n      padding: 1.5em 4em 1.5em 1.5em;\n      cursor: pointer;\n    }\n\n    .cc-coins-button:first-of-type {\n      border-top-left-radius: 1em;\n      border-top-right-radius: 1em;\n    }\n    .cc-coins-button:last-of-type {\n      border-bottom-left-radius: 1em;\n      border-bottom-right-radius: 1em;\n      border-bottom: .1em solid #ccc;\n    }\n\n    .cc-coins-button:hover,\n    .cc-coins-button:focus {\n      background: #eee;\n    }\n    \n    .cc-coins-button > svg {\n      width: 2em;\n      height: 2em;\n      margin-right: 1em;\n    }  \n  `;\n__decorate([\n    property({ type: Boolean })\n], CryptoCheckout.prototype, \"waitForConfirmation\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CryptoCheckout.prototype, \"target\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CryptoCheckout.prototype, \"closeOnEscape\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CryptoCheckout.prototype, \"lockCoin\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"message\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"hasTime\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"loading\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"paid\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"error\", void 0);\n__decorate([\n    property({ converter: (k) => parseInt(k, 10) })\n], CryptoCheckout.prototype, \"value\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"coinValue\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"displayedCoinValue\", void 0);\n__decorate([\n    property()\n], CryptoCheckout.prototype, \"coin\", void 0);\n__decorate([\n    query('#jp-c-qr')\n], CryptoCheckout.prototype, \"_qrEl\", void 0);\nCryptoCheckout = __decorate([\n    customElement('crypto-checkout')\n], CryptoCheckout);\nexport { CryptoCheckout };\n//# sourceMappingURL=crypto-checkout.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { customElement, html, LitElement, property } from 'lit-element';\nlet CryptoTimer = class CryptoTimer extends LitElement {\n    connectedCallback() {\n        super.connectedCallback();\n        const [minutes, seconds] = this.time.split(':').map(it => parseInt(it, 10));\n        this.total = (minutes * 60) + seconds;\n        this.current = this.time;\n        this._timer = setInterval(() => {\n            this.total -= 1;\n            const min = Math.floor(this.total / 60);\n            const sec = this.total % 60;\n            if (this.total) {\n                this.current = `${min > 9 ? min : `0${min}`}:${sec > 9 ? sec : `0${sec}`}`;\n                return;\n            }\n            this.dispatchEvent(new CustomEvent('finished'));\n        }, 1000);\n    }\n    disconnectedCallback() {\n        clearInterval(this._timer);\n        super.disconnectedCallback();\n    }\n    render() {\n        return html `${this.current}`;\n    }\n};\n__decorate([\n    property()\n], CryptoTimer.prototype, \"time\", void 0);\n__decorate([\n    property()\n], CryptoTimer.prototype, \"current\", void 0);\nCryptoTimer = __decorate([\n    customElement('crypto-timer')\n], CryptoTimer);\nexport { CryptoTimer };\n//# sourceMappingURL=crypto-timer.js.map","export class Coin {\n    constructor(id, wallet, label, icon, color) {\n        this.id = id;\n        this.wallet = wallet;\n        this.label = label;\n        this.icon = icon;\n        this.color = color;\n    }\n    qr(amount, note) {\n        let data = `${this.label.toLowerCase().replace(/ /g, '')}:${this.wallet}?amount=${amount}`;\n        if (note) {\n            data += `&data=${data}`;\n        }\n        return data;\n    }\n    rate(amount) {\n        return window.jpCrypto.service.getPrice(amount, this.label\n            .replace(/ /g, '-')\n            .toLowerCase());\n    }\n    format(amount) {\n        return `${amount} ${this.id}`;\n    }\n}\n//# sourceMappingURL=coin.class.js.map","import { Coin } from '../types/coin.class';\nexport const btc = new Coin('BTC', '', 'Bitcoin', '<svg viewBox=\"0 0 50 50\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path d=\"M25 50a25 25 0 100-50 25 25 0 000 50z\" id=\"a\"/></defs><g fill=\"none\" fill-rule=\"evenodd\"><use fill=\"#F7931A\" xlink:href=\"#a\"/><path d=\"M31 22c-1 3-5 2-7 1l2-5c1 1 6 1 5 4zm-1 8c-1 3-6 1-8 1l2-5c2 0 7 1 6 4zm6-8c0-3-2-4-5-5l1-4-3-1-1 4-2-1 1-3-2-1-1 4h-2l-3-1-1 2 2 1 1 1-1 5-2 6-1 1-2-1-1 3 3 1h2l-1 4 3 1 1-4h2l-1 4 2 1 1-4c5 1 8 0 9-3s0-5-2-6c1-1 3-2 3-4z\" fill=\"#FFF\"/></g></svg>', '#F7931A');\n//# sourceMappingURL=btc.js.map","import { Coin } from '../types/coin.class';\nclass Eth extends Coin {\n    qr(amount, note) {\n        let data = `ethereum:${this.wallet}?amount=${amount}`;\n        if (note) {\n            data += `&data=${note}`;\n        }\n        return data;\n    }\n}\nexport const eth = new Eth('ETH', '', 'Ethereum', '<svg viewBox=\"0 0 50 50\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"a\" d=\"M25 50a25 25 0 100-50 25 25 0 000 50z\"/></defs><g fill=\"none\" fill-rule=\"evenodd\"><use fill=\"#6B71D6\" xlink:href=\"#a\"/><path fill=\"#E9ECFF\" d=\"M25 9a493 493 0 01-9 16l5 3 5 3 5-3 5-3A692 692 0 0025 9m-9 18l10 14 10-14-10 6-5-3a915 915 0 01-5-3\"/></g></svg>', '#6b71d6');\n//# sourceMappingURL=eth.js.map","import { Coin } from '../types/coin.class';\nexport const bch = new Coin('BCH', '', 'Bitcoin Cash', '<svg xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><circle cx=\"16\" cy=\"16\" fill=\"#8dc351\" r=\"16\"/><path d=\"M21 11c-1-2-3-3-5-2l-1-3-1 1v2l-1 1-1-3h-1v3l-1 1H8l1 2h2l1 3 1 5v1h-2l1 2 2-1h1l1 3 2-1-1-2a66 66 0 001-1l1 3h2l-1-3c3-1 5-3 4-5 0-3-2-3-3-3v-3zm0 6c0 2-4 3-5 4l-1-4c1-1 5-2 6 0zm-3-5c1 2-2 3-3 3l-1-3c1-1 4-2 4 0z\" fill=\"#fff\" fill-rule=\"nonzero\"/></g></svg>', '#8dc351');\n//# sourceMappingURL=bch.js.map","import { Coin } from '../types/coin.class';\nexport const bsv = new Coin('BSV', '', 'Bitcoin SV', '<svg viewBox=\"0 0 2499.6 2500\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2500 1250a1250 1250 0 11-2501 0 1250 1250 0 012501 0z\" fill=\"#eab300\"/><g fill=\"#fff\"><path d=\"M1742 944c-17-168-161-224-344-240V472h-141v226l-113 2V472h-141v232l-90 1-195-1v151s104-2 103 0c57 0 75 34 81 62v265l15 1h-15v371c-3 18-13 46-53 46 1 2-103 0-103 0l-28 169h184l101 1v235h141v-233l113 2v231h141v-235c238-13 404-73 425-296 17-180-68-260-203-293 82-41 134-115 122-237zm-198 502c0 176-301 156-397 156v-312c96 0 397-27 397 156zm-66-439c0 160-251 141-331 141V866c80 0 331-26 331 141z\"/><path d=\"M902 1176h21v15h-21z\"/></g></svg>', '#eab300');\n//# sourceMappingURL=bsv.js.map","import { Coin } from '../types/coin.class';\nexport const ltc = new Coin('LTC', '', 'Litecoin', '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"1 1 329 329\"><defs/><path fill=\"#bebebe\" d=\"M330.102 165.503c0 90.922-73.705 164.629-164.626 164.629C74.554 330.132.848 256.425.848 165.503.848 74.582 74.554.876 165.476.876c90.92 0 164.626 73.706 164.626 164.627\"/><path fill=\"#bebebe\" d=\"M295.15 165.505c0 71.613-58.057 129.675-129.674 129.675-71.616 0-129.677-58.062-129.677-129.675 0-71.619 58.061-129.677 129.677-129.677 71.618 0 129.674 58.057 129.674 129.677\"/><path fill=\"#fff\" d=\"M155.854 209.482l10.693-40.264 25.316-9.249 6.297-23.663-.215-.587-24.92 9.104 17.955-67.608h-50.921l-23.481 88.23-19.605 7.162-6.478 24.395 19.59-7.156-13.839 51.998h135.521l8.688-32.362h-84.601\"/></svg>', '#bebebe');\n//# sourceMappingURL=ltc.js.map","import { Coin } from '../types/coin.class';\nclass Xmr extends Coin {\n    qr(note, amount) {\n        return `monero:${this.wallet}?tx_amount=${amount}&data=${note}`;\n    }\n}\nexport const xmr = new Xmr('XMR', '', 'Monero', '<svg viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\"><path d=\"M128 0A128 128 0 007 168h38V61l83 83 83-83v107h38A128 128 0 00128 0\" fill=\"#F60\"/><path d=\"M109 163l-36-36v68H19a128 128 0 00218 0h-54v-68l-36 36-19 19-19-19z\" fill=\"#4C4C4C\"/></svg>', '#d26e2b');\n//# sourceMappingURL=xmr.js.map","<script>\n  import {bch, bsv, btc, eth, ltc, xmr, init} from '@jaspero/crypto-checkout';\n\n  btc.wallet = 'bc1qk4th7mv0qzfxup5avrecratg24u9e0l56k9x7e';\n  eth.wallet = '0x751721F9754A35B4f86BaE06295406ea335eba46';\n  ltc.wallet = 'LUKqmHBopaX2PS7zndewaEUwWFGZvX3htC';\n  bch.wallet = 'qpanrffk9xpymjetvm8pf5pxx95zp5hc7sld6qzyrt';\n  bsv.wallet = '1PvPkR8PCpPTq7bK7mQgBwwfX4KhW2eUGUq';\n  xmr.wallet = '1PvPkR8PCpPTq7bK7mQgBwwfX4KhW2eUGU';\n\n  const crypto = init([btc, eth, ltc, bch, bsv, xmr]);\n\n  let amount = 1;\n\n  function openCheckout() {\n    crypto.open({\n      value: amount,\n      message: 'crypto-checkout-demo',\n      paidTemplate: 'Payment completed. Thank you!'\n    })\n  }\n</script>\n\n<a class=\"fork\" target=\"_blank\" href=\"https://github.com/Jaspero/crypto-checkout\">\n\t<img\n\tloading=\"lazy\"\n  width=\"149\"\n  height=\"149\"\n  src=\"forkme-white.png\"\n  alt=\"Fork me on GitHub\"\n  data-recalc-dims=\"1\" />\n</a>\n\n<h1>Crypto Checkout</h1>\n\n<h2>An open-source library for implementing a crypto currency checkout flow in your webapp.</h2>\n\n<main>\n\n  <input type=\"number\" placeholder=\"Amount\" bind:value={amount}>\n\n  <button on:click={openCheckout}>Checkout</button>\n</main>\n\n<div class=\"logo\">\n  <img src=\"logo.svg\" alt=\"Jaspero Logo\">\n</div>\n\n<style>\n  .fork {position: absolute; top: 0; right: 0;}\n  main {\n    text-align: center;\n    padding: 1em;\n  }\n  .logo {max-width: 200px; margin: 50px auto;}\n</style>\n","import { CoincapService } from './services/coincap.service';\nexport function init(coins, service) {\n    window.jpCrypto = {\n        service: service || new CoincapService(),\n        coins: coins,\n        open: config => {\n            const el = document.createElement('crypto-checkout');\n            if (config.instructionsTemplate) {\n                el.innerHTML += `<div slot=\"instructions\">${config.instructionsTemplate}</div>`;\n            }\n            if (config.paidTemplate) {\n                el.innerHTML += `<div slot=\"paid\">${config.paidTemplate}</div>`;\n            }\n            if (config.target) {\n                el.setAttribute('target', true);\n            }\n            [\n                'message',\n                'closeOnEscape',\n                'value',\n                'waitForConfirmation',\n                'coin',\n                'lockCoin'\n            ]\n                .forEach(key => {\n                if (config.hasOwnProperty(key)) {\n                    el.setAttribute(key, config[key]);\n                }\n            });\n            (config.target || document.body).appendChild(el);\n            return el;\n        }\n    };\n    return window.jpCrypto;\n}\n//# sourceMappingURL=core.js.map","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","current_component","set_current_component","component","dirty_components","update_promise","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","push","flush","seen_callbacks","Set","length","shift","update","$$","callback","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","make_dirty","key","Promise","resolve","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","on_mount","on_destroy","context","Map","callbacks","ready","value","hydrate","l","Array","from","childNodes","children","c","intro","i","m","new_on_destroy","map","filter","mount_component","CoincapService","[object Object]","coin","note","success","super","arguments","this","url","res","fetch","json","priceUsd","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","parts","nodesToRemove","stack","walker","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","type","tagName","currentNode","indexOf","parent","lastIndex","s","createMarker","match","previousSibling","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","__parts","setValue","commit","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getHTML","innerHTML","isPrimitive","isIterable","isArray","Symbol","iterator","AttributeCommitter","_createPart","AttributePart","v","text","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","call","templateCache","templateCaches","get","stringsArray","keyString","set","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","HTMLElement","initialize","observedAttributes","finalize","_classProperties","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdateInternal","configurable","enumerable","superCtor","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","constructor","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","customElement","classOrDescriptor","clazz","define","legacyCustomElement","kind","elements","standardCustomElement","standardProperty","assign","placement","initializer","property","protoOrDescriptor","proto","legacyProperty","legacyQuery","standardQuery","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","renderNotImplemented","LitElement","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","cssRules","reduce","css","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","litRender","delete","previousValues","unsafeHTML","f","previousValue","args","d","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","CryptoCheckout","waitForConfirmation","closeOnEscape","lockCoin","message","hasTime","loading","paid","onEsc","close","service","jpCrypto","coins","selectCoin","catch","disconnectedCallback","coinTemp","id","coinSelected","icon","label","error","timeOut","displayedCoinValue","wallet","confirmPay","view","paidTemp","payTemp","coinsTemp","dataset","find","it","coinValue","rate","format","renderQr","QRCodeStyling","width","height","qr","image","btoa","imageOptions","margin","dotsOptions","color","backgroundOptions","_qrEl","confirmPayment","dispatchEvent","CustomEvent","detail","amount","selector","cache","acc","idx","textFromCSSResult","parseInt","CryptoTimer","minutes","seconds","time","total","current","_timer","setInterval","min","floor","sec","clearInterval","Coin","replace","getPrice","btc","eth","bch","bsv","ltc","xmr","openCheckout","crypto","open","config","el","instructionsTemplate","paidTemplate","body","detaching","$destroy","splice"],"mappings":"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"}